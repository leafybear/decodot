# ~/.zshrc
source "$HOME/.shellrc"
source "$HOME/.zsh_git"

# When connecting via ssh, always [re]attach to a terminal manager
# Adapted from code found at <http://involution.com/2004/11/17/1-32/> (now offline)
if command_exists tmux && [ -z $TMUX ]; then
  if [ "$SSH_TTY" != "" -a "$TERM" -a "$TERM" != "screen" -a "$TERM" != "dumb" ]; then
    pgrep tmux
    # $? is the exit code of pgrep; 0 means there was a result (tmux is already running)
    if [ $? -eq 0 ]; then
      tmux -u attach -d
    else
      tmux -u
    fi
  fi
fi

# Import modules/stuff
autoload -U  compinit   && compinit
autoload -U  promptinit && promptinit
autoload -U  colors     && colors


### Variables
esc="$(echo -e '\e')"
up="${esc}[A"
down="${esc}[B"

### Hooks to update title
# Usage: set_title "new-title"
function set_title {
  title_set="${esc}]0"
  title_stop="$(echo -e '\007')"
  Title="$title_set;$@$title_stop"
  echo -n "$Title"
}

if [ $TERM != 'linux' ]; then
  function chpwd {
    pwd="$(pwd | sed s:$HOME:~:)"
    set_title "$USER@$HOST $pwd"
  }
  chpwd
fi

### Setup prompt
setopt PROMPT_SUBST

# PROMPT='%{$fg[$host_color]%}%n@%m%{$reset_color%} %~
# %{${fg[yellow]}%}%# '
# RPROMPT='$(git_info)'
# PS2="%{${fg[yellow]}%}» "

ssh_info() {
  [[ "$SSH_CONNECTION" != '' ]] && echo "%(!.%{$fg[red]%}.%{$fg[yellow]%})%n%{$reset_color%}@%{$fg[green]%}%m%{$reset_color%}:" || echo ""
}

# Use ❯ as the non-root prompt character; # for root
# Change the prompt character color if the last command had a nonzero exit code
PS1='
%{$fg[magenta]%}%~%u $(git_info)
%(?.%{$fg[blue]%}.%{$fg[red]%}%? )%(!.#.$)%{$reset_color%} '

# see also: `precmd` above (for pseudo-RPROMPT)

# History
export HISTSIZE=2000
export HISTFILE="$HOME/.history"
export SAVEHIST="$HISTSIZE"
setopt hist_ignore_all_dups


#### Aliases ########################################################
# (zsh specific--also see .shellrc)
#alias -g G='| grep -P'
#alias -g L='| less'


#### Fix key bindings ###############################################
bindkey -v         # vi-like bindings

# Borrow a bunch of neat stuff from the default emacs-like bindings, that the
# vi-like bindings lack.
bindkey    "^A"    beginning-of-line
#bindkey    "^D"    delete-char-or-list
bindkey    '^E'    end-of-line
#bindkey    "^G"    send-break
bindkey    "^H"    backward-delete-char
bindkey    "^N"    down-line-or-history
#bindkey    "^O"    accept-line-and-down-history
bindkey    "^P"    up-line-or-history
#bindkey    "^R"    history-incremental-search-backward
bindkey    "^R"    history-incremental-pattern-search-backward
#bindkey    "^S"    history-incremental-search-forward
bindkey    "^V"    quoted-insert
bindkey    '^?'    backward-delete-char

# vi-"normal mode" bindings
bindkey -a "^A"    beginning-of-line
bindkey -a '^E'    end-of-line
bindkey -a '^K'    kill-whole-line

# Also fix a bunch of other keys
bindkey '^[[H'     beginning-of-line # <Home>
bindkey '^[[F'     end-of-line       # <End>
bindkey "^[[1;5D"  backward-word     # <C-left>
bindkey "^[[1;5C"  forward-word      # <C-right>

bindkey "^K"       kill-whole-line
bindkey "^U"       undo
bindkey "^['"      quote-line
bindkey "^[[39;5u" quote-line
